#!/bin/bash

# Production environment setup script

echo "üöÄ Setting up Modulo CMS production environment..."

# Check if .env.production exists, if not copy from .env.example
if [ ! -f .env.production ]; then
    echo "üìã Creating .env.production file..."
    cp .env.example .env.production
    echo "‚úÖ Created .env.production - Please edit it with your production settings"
    echo ""
    echo "‚ö†Ô∏è  IMPORTANT: Update .env.production with your production values:"
    echo "   ‚Ä¢ APP_URL (your domain)"
    echo "   ‚Ä¢ Database credentials"
    echo "   ‚Ä¢ Redis password"
    echo "   ‚Ä¢ Mail settings"
    echo "   ‚Ä¢ Generate APP_KEY"
fi

# Copy production environment to .env
echo "üìã Setting up production .env file..."
cp .env.production .env

# Build and start production containers
echo "üê≥ Building and starting production containers..."
docker-compose -f docker-compose.yml --profile production up -d --build

# Wait for services to be ready
echo "‚è≥ Waiting for services to start..."
sleep 15

echo ""
echo "üéâ Modulo CMS production environment is ready!"
echo ""
echo "üìä Services:"
echo "   ‚Ä¢ Laravel App: http://localhost:8080"
echo "   ‚Ä¢ Redis: localhost:6379"
echo ""
echo "üîß Next steps:"
echo "   ‚Ä¢ Update your DNS to point to this server"
echo "   ‚Ä¢ Configure SSL certificate (recommended)"
echo "   ‚Ä¢ Set up proper backups"
echo "   ‚Ä¢ Monitor logs: docker-compose logs -f"
echo ""
echo "‚ö†Ô∏è  Remember to:"
echo "   ‚Ä¢ Update .env.production with secure passwords"
echo "   ‚Ä¢ Run 'php artisan key:generate' to set APP_KEY"
echo "   ‚Ä¢ Configure firewall rules"
echo ""
