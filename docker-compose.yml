version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: modulo-cms-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/development/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/database/database.sqlite
      - CACHE_STORE=redis
      - SESSION_CONNECTION=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - modulo-cms

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: modulo-cms-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - modulo-cms

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: modulo-cms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - modulo-cms
    command: redis-server --appendonly yes

  # Database (SQLite)
  # For production, consider using MySQL or PostgreSQL instead
  # Uncomment and modify the following if you want to use MySQL:
  # mysql:
  #   image: mysql:8.0
  #   container_name: modulo-cms-mysql
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: modulo_cms
  #     MYSQL_USER: modulo
  #     MYSQL_PASSWORD: password
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   networks:
  #     - modulo-cms

  # Node.js for asset compilation (development only)
  node:
    image: node:20-alpine
    container_name: modulo-cms-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /var/www/node_modules
    profiles:
      - dev

volumes:
  redis_data:
    driver: local
  # mysql_data:
  #   driver: local

networks:
  modulo-cms:
    driver: bridge
